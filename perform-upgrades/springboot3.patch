diff --git a/modernize-tests/pom.xml b/modernize-tests/pom.xml
index 8859895..90d795d 100644
--- a/modernize-tests/pom.xml
+++ b/modernize-tests/pom.xml
@@ -9,19 +9,13 @@ org.openrewrite.java.spring.boot3.UpgradeSpringBoot_3_1
     <version>0.0.1-SNAPSHOT</version>
 
     <properties>
-        <maven.compiler.source>8</maven.compiler.source>
-        <maven.compiler.target>8</maven.compiler.target>
+        <maven.compiler.source>17</maven.compiler.source>
+        <maven.compiler.target>17</maven.compiler.target>
         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
     </properties>
 
     <dependencies>
         <dependency>
-            <groupId>junit</groupId>
-            <artifactId>junit</artifactId>
-            <version>4.12</version>
-            <scope>test</scope>
-        </dependency>
-        <dependency>
             <groupId>org.hamcrest</groupId>
             <artifactId>hamcrest</artifactId>
             <version>2.2</version>
diff --git a/modernize-tests/src/test/java/com/github/timtebeek/moneymaker/HamcrestTwo.java b/modernize-tests/src/test/java/com/github/timtebeek/moneymaker/HamcrestTwo.java
index 5132176..e2578e0 100644
--- a/modernize-tests/src/test/java/com/github/timtebeek/moneymaker/HamcrestTwo.java
+++ b/modernize-tests/src/test/java/com/github/timtebeek/moneymaker/HamcrestTwo.java
@@ -1,14 +1,14 @@ org.openrewrite.java.spring.boot3.UpgradeSpringBoot_3_1
 package com.github.timtebeek.moneymaker;
 
-import org.junit.Test;
+import org.junit.jupiter.api.Test;
 
 import static org.hamcrest.MatcherAssert.assertThat;
 import static org.hamcrest.Matchers.*;
 
-public class HamcrestTwo {
+class HamcrestTwo {
 
     @Test
-    public void testMoneyAmount() {
+    void testMoneyAmount() {
         Money money = MoneyMaker.makeMoney();
         assertThat(money, is(not(nullValue())));
         assertThat(money.amount, is(100.0f));
diff --git a/modernize-tests/src/test/java/com/github/timtebeek/moneymaker/JUnitFour.java b/modernize-tests/src/test/java/com/github/timtebeek/moneymaker/JUnitFour.java
index 1be7c23..5f19128 100644
--- a/modernize-tests/src/test/java/com/github/timtebeek/moneymaker/JUnitFour.java
+++ b/modernize-tests/src/test/java/com/github/timtebeek/moneymaker/JUnitFour.java
@@ -1,53 +1,55 @@ org.openrewrite.java.spring.boot3.UpgradeSpringBoot_3_1
 package com.github.timtebeek.moneymaker;
 
-import org.junit.Rule;
-import org.junit.Test;
-import org.junit.rules.TemporaryFolder;
+import org.junit.jupiter.api.Test;
+import org.junit.jupiter.api.Timeout;
+import org.junit.jupiter.api.io.TempDir;
 
 import java.io.File;
 import java.io.IOException;
 import java.nio.file.Files;
 
-import static org.junit.Assert.assertEquals;
-import static org.junit.Assert.assertNotNull;
+import static org.junit.jupiter.api.Assertions.*;
 
 public class JUnitFour {
 
     @Test
-    public void testMoneyAmount() {
+    void testMoneyAmount() {
         Money money = MoneyMaker.makeMoney();
         assertNotNull(money);
         assertEquals(100.0f, money.amount, 0.0f);
     }
 
-    @Test(expected = ArithmeticException.class)
-    public void testDivideByZero() {
-        Money money = MoneyMaker.makeMoney();
-        float error = (int) money.amount / 0;
+    @Test
+    void testDivideByZero() {
+        assertThrows(ArithmeticException.class, () -> {
+            Money money = MoneyMaker.makeMoney();
+            float error = (int) money.amount / 0;
+        });
     }
 
-    @Test(timeout = 1000)
-    public void testTimeout() throws InterruptedException {
+    @Test
+    @Timeout(1000)
+    void testTimeout() throws InterruptedException {
         Thread.sleep(500);
     }
 
     @Test
-    public void testMoneyAmountWithMessage() {
+    void testMoneyAmountWithMessage() {
         Money money = MoneyMaker.makeMoney();
-        assertNotNull("Money should not be null", money);
-        assertEquals("Money amount should be 100.0f", 100.0f, money.amount, 0.0f);
+        assertNotNull(money, "Money should not be null");
+        assertEquals(100.0f, money.amount, 0.0f, "Money amount should be 100.0f");
     }
 
-    @Rule
-    public TemporaryFolder folder = new TemporaryFolder();
+    @TempDir
+    public File folder;
 
     @Test
-    public void testMoneyAmountWithMessageSupplier() throws Exception {
-        File file = folder.newFile("account.txt");
+    void testMoneyAmountWithMessageSupplier() throws Exception {
+        File file = File.createTempFile("account.txt", null, folder);
         Money money = MoneyMaker.makeMoney();
         Files.write(file.toPath(), String.valueOf(money.amount).getBytes());
         String read = new String(Files.readAllBytes(file.toPath()));
-        assertEquals("Money amount should be 100.0f", "100.0", read);
+        assertEquals("100.0", read, "Money amount should be 100.0f");
     }
 
 }
diff --git a/modernize-tests/src/test/java/com/github/timtebeek/moneymaker/JUnitThree.java b/modernize-tests/src/test/java/com/github/timtebeek/moneymaker/JUnitThree.java
index fe0f102..da96482 100644
--- a/modernize-tests/src/test/java/com/github/timtebeek/moneymaker/JUnitThree.java
+++ b/modernize-tests/src/test/java/com/github/timtebeek/moneymaker/JUnitThree.java
@@ -1,10 +1,16 @@ org.openrewrite.java.spring.boot3.UpgradeSpringBoot_3_1
 package com.github.timtebeek.moneymaker;
 
-public class JUnitThree extends junit.framework.TestCase {
+import org.junit.jupiter.api.Test;
+
+import static org.junit.jupiter.api.Assertions.assertEquals;
+import static org.junit.jupiter.api.Assertions.assertNotNull;
+
+class JUnitThree {
 
     // Look ma, no annotations!
     // The test prefix is enough.
-    public void testMoneyAmount() {
+    @Test
+    void testMoneyAmount() {
         Money money = MoneyMaker.makeMoney();
         // Nor static imports!
         assertNotNull(money);
diff --git a/perform-upgrades/pom.xml b/perform-upgrades/pom.xml
index 33b256d..74d5436 100644
--- a/perform-upgrades/pom.xml
+++ b/perform-upgrades/pom.xml
@@ -9,8 +9,8 @@ org.openrewrite.java.spring.boot3.UpgradeSpringBoot_3_1
     <version>0.0.1-SNAPSHOT</version>
 
     <properties>
-        <maven.compiler.source>8</maven.compiler.source>
-        <maven.compiler.target>8</maven.compiler.target>
+        <maven.compiler.source>17</maven.compiler.source>
+        <maven.compiler.target>17</maven.compiler.target>
         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
     </properties>
 
@@ -18,12 +18,12 @@
         <dependency>
             <groupId>org.springframework.boot</groupId>
             <artifactId>spring-boot-starter-web</artifactId>
-            <version>2.0.0.RELEASE</version>
+            <version>3.1.5</version>
         </dependency>
         <dependency>
             <groupId>org.projectlombok</groupId>
             <artifactId>lombok</artifactId>
-            <version>1.18.22</version>
+            <version>1.18.30</version>
             <scope>provided</scope>
         </dependency>
         <dependency>
diff --git a/perform-upgrades/src/main/java/com/github/timtebeek/moneymaker/MoneyMakerController.java b/perform-upgrades/src/main/java/com/github/timtebeek/moneymaker/MoneyMakerController.java
index 59b5522..79e8fd7 100644
--- a/perform-upgrades/src/main/java/com/github/timtebeek/moneymaker/MoneyMakerController.java
+++ b/perform-upgrades/src/main/java/com/github/timtebeek/moneymaker/MoneyMakerController.java
@@ -1,7 +1,5 @@ org.openrewrite.java.spring.boot3.UpgradeSpringBoot_3_1
 package com.github.timtebeek.moneymaker;
 
-import lombok.val;
-import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.stereotype.Controller;
 import org.springframework.web.bind.annotation.*;
 
@@ -14,31 +12,30 @@
 
     private final MoneyMakerService moneyMakerService;
 
-    @Autowired
     public MoneyMakerController(MoneyMakerService moneyMakerService) {
         this.moneyMakerService = moneyMakerService;
     }
 
 
-    @RequestMapping(value = "/make-money/{currency}", method = RequestMethod.GET)
-    public Money makeMoney(@PathVariable("currency") String currency,
-                           @RequestParam("amount") int amount) {
+    @GetMapping("/make-money/{currency}")
+    public Money makeMoney(@PathVariable String currency,
+                           @RequestParam int amount) {
         Money money = moneyMakerService.makeMoney(currency, amount);
         return money;
     }
 
-    @RequestMapping(value = "/statements", method = RequestMethod.GET)
+    @GetMapping("/statements")
     public String statements() {
-        val statements = moneyMakerService.statements();
+        final var statements = moneyMakerService.statements();
         return statements;
     }
 
-    @RequestMapping(value = "/consume", method = RequestMethod.POST)
+    @PostMapping("/consume")
     public void consume(@RequestBody Money obj) {
         moneyMakerService.consume(obj);
     }
 
-    @RequestMapping(value = "/balances", method = RequestMethod.GET)
+    @GetMapping("/balances")
     public List<Money> balances() {
         List<Money> balances = moneyMakerService.balances();
 
diff --git a/perform-upgrades/src/main/java/com/github/timtebeek/moneymaker/MoneyMakerService.java b/perform-upgrades/src/main/java/com/github/timtebeek/moneymaker/MoneyMakerService.java
index c7292e5..19460bf 100644
--- a/perform-upgrades/src/main/java/com/github/timtebeek/moneymaker/MoneyMakerService.java
+++ b/perform-upgrades/src/main/java/com/github/timtebeek/moneymaker/MoneyMakerService.java
@@ -12,16 +12,17 @@ org.openrewrite.java.spring.boot3.UpgradeSpringBoot_3_1
     }
 
     public String statements() {
-        String statements = "Date       | Description          | Amount\n"
-                + "2018-01-01 | Initial balance      | 0.00\n"
-                + "2018-01-01 | Salary January       | 1000.00\n"
-                + "2018-01-02 | Rent January         | -500.00\n";
+        String statements = """
+                Date       | Description          | Amount
+                2018-01-01 | Initial balance      | 0.00
+                2018-01-01 | Salary January       | 1000.00
+                2018-01-02 | Rent January         | -500.00
+                """;
         return statements;
     }
 
     public void consume(Object obj) {
-        if (obj instanceof Money) {
-            Money money = (Money) obj;
+        if (obj instanceof Money money) {
             System.out.println("Consumed " + money.getAmount() + " " + money.getCurrency());
         } else {
             System.out.println("Consumed object: " + obj);
diff --git a/perform-upgrades/src/main/resources/bootstrap.yml b/perform-upgrades/src/main/resources/bootstrap.yml
index 7cb332d..5128b43 100644
--- a/perform-upgrades/src/main/resources/bootstrap.yml
+++ b/perform-upgrades/src/main/resources/bootstrap.yml
@@ -1 +1 @@ org.openrewrite.java.spring.boot3.UpgradeSpringBoot_3_1
-management.metrics.export.prometheus.enabled: true
+management.prometheus.metrics.export.enabled: true
diff --git a/perform-upgrades/src/main/resources/application.properties b/perform-upgrades/src/main/resources/application.properties
index f258e4c..2b9253f 100644
--- a/perform-upgrades/src/main/resources/application.properties
+++ b/perform-upgrades/src/main/resources/application.properties
@@ -1 +1 @@ org.openrewrite.java.spring.boot3.UpgradeSpringBoot_3_1
-server.servlet.path=/moneymaker
+spring.mvc.servlet.path=/moneymaker
diff --git a/code-quality-issues/pom.xml b/code-quality-issues/pom.xml
index b250caf..643a711 100644
--- a/code-quality-issues/pom.xml
+++ b/code-quality-issues/pom.xml
@@ -9,8 +9,8 @@ org.openrewrite.java.spring.boot3.UpgradeSpringBoot_3_1
     <version>0.0.1-SNAPSHOT</version>
 
     <properties>
-        <maven.compiler.source>8</maven.compiler.source>
-        <maven.compiler.target>8</maven.compiler.target>
+        <maven.compiler.source>17</maven.compiler.source>
+        <maven.compiler.target>17</maven.compiler.target>
         <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
     </properties>
